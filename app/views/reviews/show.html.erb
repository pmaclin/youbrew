<!-- Responsive panel example-->

<div class="row">
  <div class="col-sm-offset-1 col-sm-10 col-md-offset-2 col-md-8">
    <div class="panel panel-default">
      <div class="panel-heading">
        <h3 class="panel-title">Review #<%= @review.id %></h3>
      </div>
      <div class="panel-body">
        <div class="row">
          <div class="col-md-12">
            <dl class="dl-horizontal">
              <dt>Headline</dt>
              <dd><%= @review.headline %></dd>

              <dt>Content</dt>
              <dd><%= @review.content %></dd>

              <dt>Overall rating</dt>
              <dd><%= @review.overall_rating %></dd>

              <dt>User</dt>
              <dd><%= @review.user_id %></dd>

              <dt>Batch</dt>
              <dd><%= @review.batch_id %></dd>

            </dl>
            <div class="btn-group btn-group-justified">
              <%= link_to icon('chevron-left'), reviews_path, class: "btn btn-primary" %>

              <%= link_to icon('edit'), edit_review_path(@review), class: "btn btn-warning" %>

              <%= link_to icon('trash-o'), @review, method: :delete, data: { confirm: "Do you really want to delete this review?" }, class: "btn btn-danger" %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- End responsive panel example -->
<!-- From review/show: -->
<!-- 1. The user/fan will input a unique number
     2. The beer's profile info should come up, on the review/show page. It will have some detail about the beer
        which will come from the beer's batch profile. This will be the "actual" information, gathered by the brewer
        after the batch has been made...Not the target information that comes from the recipe.
     3. On save, a NEW ROW is created in the REVIEW table -->

<!-- The number coming in from the user is a unique_id. When that unique number comes in through stored in the params hash, we're going to ask the UNIQUE table if it has a row (unique.id) that matches this unique_id? If you do, please return the batch_id. Once we have that row, we can go over to the batch table and return all of the relevant batch information (Actual batch data), and show that on the review/show page. -->
<!-- The user/fan will rate the beer, leave a review and on submit a new row will be created in the REVIEW table. -->
